openapi: 3.0.3
info:
  title: dependencies-json-server API
  description: dependencies-json-server API
  version: v1
servers:
- url: https://localhost:8080
  description: dev
tags:
- name: Example
paths:
  /v1/example:
    description: Example endpoint.
    get:
      tags:
      - Example
      description: read example
      operationId: getExample
      responses:
        "201":
          description: No content
components:
  schemas:
    Error:
      required:
      - code
      - detail
      - instance
      - status
      - title
      - type
      properties:
        type:
          type: string
          description: "The \"type\" member is a JSON string containing a URI reference\
            \ [URI] that identifies the problem type. Consumers MUST use the \"type\"\
            \ URI (after resolution, if necessary) as the problem type's primary identifier."
        status:
          type: integer
          description: "The \"status\" member is a JSON number indicating the HTTP\
            \ status code ([HTTP], Section 15) generated by the origin server for\
            \ this occurrence of the problem."
          format: int32
          example: 403
        title:
          type: string
        detail:
          type: string
        instance:
          type: string
        code:
          type: string
        time:
          type: string
          format: date-time
        arguments:
          type: array
          items:
            $ref: "#/components/schemas/ErrorArgument"
          default: []
    ErrorArgument:
      required:
      - key
      - type
      properties:
        key:
          type: string
        value:
          type: string
        type:
          type: string
    SharedEntityMetadata:
      allOf:
      - properties:
          createdAt:
            type: string
            description: "Timestamp when the resource was created. Example: 2024-01-01T00:00:00.000Z"
            format: date-time
          updatedAt:
            type: string
            description: "Timestamp when the resource was last updated. Example: 2024-01-01T00:00:00.000Z"
            format: date-time
      - $ref: "#/components/schemas/SharedLockVersion"
    SharedIntId:
      properties:
        id:
          type: integer
          description: Integer id for reuse in various objects.
          format: int32
          example: 1
    SharedListMetadata:
      required:
      - first
      - last
      - number
      - number_of_elements
      - size
      - sort
      - total_elements
      - total_pages
      properties:
        first:
          type: boolean
          description: Boolean true if it's the first page.
          example: false
          default: false
        last:
          type: boolean
          description: Boolean true if it's the last page.
          example: false
          default: false
        number:
          minimum: 0
          type: integer
          description: The requested page.
          format: int32
          example: 0
        number_of_elements:
          minimum: 0
          type: integer
          description: Number of elements on this page.
          format: int32
          example: 0
        size:
          minimum: 0
          type: integer
          description: The requested page size.
          format: int32
          example: 1
        total_elements:
          minimum: 0
          type: integer
          description: Total number of entries matching the query.
          format: int64
          example: 42
        total_pages:
          minimum: 0
          type: integer
          description: Number of pages in total.
          format: int32
          example: 84
        sort:
          type: array
          description: Used values to sort the result.
          example: name:asc
          items:
            type: string
    SharedLockVersion:
      properties:
        lockVersion:
          type: integer
          description: Lock version for optimistic locking. Needed for updating existing
            resources.
          format: int32
          example: 0
  parameters:
    pageOptional:
      name: page
      in: query
      description: Pagination parameter. Skips page * size entries.
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
        format: int32
        default: 0
    sizeOptional:
      name: size
      in: query
      description: Max number of results per page.
      required: false
      style: form
      explode: true
      schema:
        maximum: 10000
        minimum: 1
        type: integer
        format: int32
        default: 20
    sortOptional:
      name: sort
      in: query
      description: Parameter to sort by as field(:(asc|desc))?. If missing default
        sort is used. field is the name in the db model not the db field name.
      required: false
      style: form
      explode: true
      allowReserved: true
      schema:
        type: array
        items:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
